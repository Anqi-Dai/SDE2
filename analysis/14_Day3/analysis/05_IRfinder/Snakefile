'''
This snakefile will do the following:
Use IFfinder to identify the differentially retend introns when comparing KD vs control

* Build reference for IRfinder
* Map the reads to the reference and produce the bam file
* Concat the unsorted bam file
* Analyze using analysisWithLowReplicates.pl  
'''

from glob import glob
import os

# -----------------------------------------------------------

sample_dir = '/restricted/projectnb/flynngrp/adai/Day3_SDE2'

sample_names = json.load(open('../samples.json')).keys()

IRfinder_path = '../../../05_IRfinder/IRfinder_software/IRFinder-1.2.5/bin/IRFinder'
Ref_dir = '../../../05_IRfinder/REF/Human-hg38'

# -----------------------------------------------------------

rule output:
    input:
        sample_dir+'/IRfinder_result/RF89_vs_ctrl.txt', sample_dir+'/IRfinder_result/RF14_vs_ctrl.txt'


# Build reference by using the same genome and annotation file as Whippet so that I can cross reference later
#  The IRfinder will use 32 cores to run this 

rule build_reference:
    input:
        IRfinder_path=IRfinder_path
    output:
        directory('REF/Human-hg38/Mapability')
    threads:
        32
    shell:
        '''
        {input.IRfinder_path} -m BuildRefProcess  \
            -r REF/Human-hg38        
        '''
    

# Align the reads to the reference through IRfinder, cuz I need the IRfinder part of the alignment result for the later IR differential analysis.
#   so the file structure has to be like specified in the documentation

rule Align_reads:
    input:
        R1='{sample_dir}/{sample_names}__concat_R1_trimmed.fastq.gz',
        R2='{sample_dir}/{sample_names}__concat_R2_trimmed.fastq.gz',
        ref=Ref_dir,
        IRpath=IRfinder_path
    output:
        bam='{sample_dir}/IRfinder_result/{sample_names}/Unsorted.bam',
        txt='{sample_dir}/IRfinder_result/{sample_names}/IRFinder-IR-dir.txt'
    params:
        prefix='{sample_dir}/IRfinder_result/{sample_names}/'
    threads:
        16
    shell:
        '''
        export LD_LIBRARY_PATH=/projectnb/bubhub/conda_root/user_conda/adai/envs/flynn_altstatus/lib;
        {input.IRpath} -d  {params.prefix}  -s LoadAndKeep \
         -u -t {threads}  -r {input.ref} {input.R1} {input.R2}
        '''


# Differential IR analysis between conditions: Small Amounts of Replicates via Audic and Claverie Test

def get_RF14_3replicates_unsorted_bam(wildcards):
    return glob('{}/IRfinder_result/RF-3-14*/Unsorted.bam'.format(wildcards.sample_dir))

def get_RF89_3replicates_unsorted_bam(wildcards):
    return glob('{}/IRfinder_result/RF-3-89*/Unsorted.bam'.format(wildcards.sample_dir))

def get_control_3replicates_unsorted_bam(wildcards):
    return glob('{}/IRfinder_result/RF-3-M*/Unsorted.bam'.format(wildcards.sample_dir))

rule concate_them:
    input:
        RF14=get_RF14_3replicates_unsorted_bam,
        RF89=get_RF89_3replicates_unsorted_bam,
        RFctrl=get_control_3replicates_unsorted_bam
    output:
        out14='{sample_dir}/IRfinder_result/RF14_concat3_unsorted.bam',
        out89='{sample_dir}/IRfinder_result/RF89_concat3_unsorted.bam',
        outctrl='{sample_dir}/IRfinder_result/RFctrl_concat3_unsorted.bam'
    threads:
        4
    shell:
        '''
        samtools cat {input.RF14} -o {output.out14};
        samtools cat {input.RF89} -o {output.out89} ;
        samtools cat {input.RFctrl} -o {output.outctrl}
        '''

rule pooled_14:
    input:
        bam='{sample_dir}/IRfinder_result/RF14_concat3_unsorted.bam',
        ref=Ref_dir,
        IRpath=IRfinder_path 
    output:
        '{sample_dir}/IRfinder_result/Pooled_14/IRFinder-IR-dir.txt'
    threads:
        12
    params:
        prefix='{sample_dir}/IRfinder_result/Pooled_14/'
    shell:
        '''
        export LD_LIBRARY_PATH=/projectnb/bubhub/conda_root/user_conda/adai/envs/flynn_altstatus/lib;
        {input.IRpath} -m BAM -r {input.ref} -d  {params.prefix} {input.bam} > {output}
        '''    


rule pooled_89:
    input:
        bam='{sample_dir}/IRfinder_result/RF89_concat3_unsorted.bam',
        ref=Ref_dir,
        IRpath=IRfinder_path 
    output:
        '{sample_dir}/IRfinder_result/Pooled_89/IRFinder-IR-dir.txt'
    threads:
        12
    params:
        prefix='{sample_dir}/IRfinder_result/Pooled_89/'
    shell:
        '''
        export LD_LIBRARY_PATH=/projectnb/bubhub/conda_root/user_conda/adai/envs/flynn_altstatus/lib;
        {input.IRpath} -m BAM -r {input.ref} -d  {params.prefix} {input.bam} > {output}
        '''    


rule pooled_ctrl:
    input:
        bam='{sample_dir}/IRfinder_result/RFctrl_concat3_unsorted.bam',
        ref=Ref_dir,
        IRpath=IRfinder_path 
    output:
        '{sample_dir}/IRfinder_result/Pooled_ctrl/IRFinder-IR-dir.txt'
    threads:
        12
    params:
        prefix='{sample_dir}/IRfinder_result/Pooled_ctrl/'
    shell:
        '''
        export LD_LIBRARY_PATH=/projectnb/bubhub/conda_root/user_conda/adai/envs/flynn_altstatus/lib;
        {input.IRpath} -m BAM -r {input.ref} -d  {params.prefix} {input.bam} > {output}
        '''    

# Calling the comparison script to get the differential IR results

rule compare_IR_14vsctrl:
    input:
        pooled_14='{sample_dir}/IRfinder_result/Pooled_14/IRFinder-IR-dir.txt',
        pooled_ctrl='{sample_dir}/IRfinder_result/Pooled_ctrl/IRFinder-IR-dir.txt',
        RF14_1='{sample_dir}/IRfinder_result/RF-3-14-1/IRFinder-IR-dir.txt',
        RF14_2='{sample_dir}/IRfinder_result/RF-3-14-2/IRFinder-IR-dir.txt',
        RF14_3='{sample_dir}/IRfinder_result/RF-3-14-3/IRFinder-IR-dir.txt',
        c1='{sample_dir}/IRfinder_result/RF-3-M-1/IRFinder-IR-dir.txt',
        c2='{sample_dir}/IRfinder_result/RF-3-M-2/IRFinder-IR-dir.txt',
        c3='{sample_dir}/IRfinder_result/RF-3-M-3/IRFinder-IR-dir.txt'
    output:
        '{sample_dir}/IRfinder_result/RF14_vs_ctrl.txt'
    shell:
        '''
        ../../../05_IRfinder/IRfinder_software/IRFinder-1.2.5/bin/analysisWithLowReplicates.pl  \
            -A {input.pooled_14} {input.RF14_1} {input.RF14_2} {input.RF14_3}  \
            -B {input.pooled_ctrl} {input.c1} {input.c2}  {input.c3} > {output}
        '''


rule compare_IR_89vsctrl:
    input:
        pooled_89='{sample_dir}/IRfinder_result/Pooled_89/IRFinder-IR-dir.txt',
        pooled_ctrl='{sample_dir}/IRfinder_result/Pooled_ctrl/IRFinder-IR-dir.txt',
        RF89_1='{sample_dir}/IRfinder_result/RF-3-89-1/IRFinder-IR-dir.txt',
        RF89_2='{sample_dir}/IRfinder_result/RF-3-89-2/IRFinder-IR-dir.txt',
        RF89_3='{sample_dir}/IRfinder_result/RF-3-89-3/IRFinder-IR-dir.txt',
        c1='{sample_dir}/IRfinder_result/RF-3-M-1/IRFinder-IR-dir.txt',
        c2='{sample_dir}/IRfinder_result/RF-3-M-2/IRFinder-IR-dir.txt',
        c3='{sample_dir}/IRfinder_result/RF-3-M-3/IRFinder-IR-dir.txt'
    output:
        '{sample_dir}/IRfinder_result/RF89_vs_ctrl.txt'
    shell:
        '''
        ../../../05_IRfinder/IRfinder_software/IRFinder-1.2.5/bin/analysisWithLowReplicates.pl  \
            -A {input.pooled_89} {input.RF89_1} {input.RF89_2} {input.RF89_3}  \
            -B {input.pooled_ctrl} {input.c1} {input.c2}  {input.c3}  > {output}
        '''


